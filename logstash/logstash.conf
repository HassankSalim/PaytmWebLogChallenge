input {
  beats {
    port => 5044
  }
}
filter {
  grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:log_timestamp} %{NOTSPACE:alb-name} %{IP:client}:%{INT:client_port:int} %{IP:target}:%{INT:target_port:int} %{BASE16FLOAT:request_processing_time:float} %{BASE16FLOAT:target_processing_time:float} %{BASE16FLOAT:response_processing_time:float} %{NUMBER:elb_status_code:int} %{NUMBER:target_status_code:int} %{INT:received_bytes:int} %{INT:sent_bytes:int} %{QUOTEDSTRING:request} %{QUOTEDSTRING:user_agent} %{NOTSPACE:ssl_cipher} %{NOTSPACE:ssl_protocol}" }
  }
  mutate {
    add_field => { "user_agent_exists" => false }
    gsub => [
      "request", '"', "",
      "trace_id", '"', "",
      "user_agent", '"', ""
    ]
  }
  date {
      match  => [ "log_timestamp", "ISO8601"]
  }  
  grok {
        match => ["request", "(%{NOTSPACE:http_method})? (%{NOTSPACE:http_uri})? (%{NOTSPACE:http_version})?"]
    }
  grok {
        match => ["http_uri", "(%{WORD:protocol})?(://)?(%{IPORHOST:domain})?(:)?(%{INT:http_port:int})?(%{GREEDYDATA:request_uri})?"]
    }

  if [user_agent] != "-" and [user_agent] != "" {
    
    mutate {
      update => { "user_agent_exists" => true }
    }

    useragent {
      source => "user_agent"
      target => "agent_details"
    }
  }

  geoip {
      source => "client"
  } 
  mutate {
    convert => { "user_agent_exists" => boolean }
    remove_field => ["request", "path", "message", "@version", "tags", "beat", "input", "prospector", "offset", "host", "[geoip][continent_code]", "[geoip][region_code]", "[geoip][country_code3]", "[geoip][country_code2]", "[geoip][country_name]", "[geoip][timezone]", "source", "[agent_details][patch]", "[agent_details][os_major]", "[agent_details][os_minor]", "[agent_details][major]", "[agent_details][minor]", "[agent_details][build]"]
  }
}
output { 
  stdout {
    codec => rubydebug
  }
  mongodb {
    collection => "paytm_log"
    database => "paytm"
    uri => "mongodb://localhost:27017"
  }
  elasticsearch {
  hosts => ["localhost:9200"]
  index => "paytm_log"
  manage_template => true
  template => "elastic/paytm_log_mapping.json"
  template_name => "paytm_log_template"
  template_overwrite => true
  }
}
