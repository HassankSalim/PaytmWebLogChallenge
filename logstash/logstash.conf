input {
  beats {
    port => 5044
  }
}
filter {
  grok {
    match => { "message" => "%{TIMESTAMP_ISO8601:log_timestamp} %{NOTSPACE:alb-name} %{IP:client}:%{INT:client_port} %{IP:target}:%{INT:target_port} %{BASE16FLOAT:request_processing_time} %{BASE16FLOAT:target_processing_time} %{BASE16FLOAT:response_processing_time} %{NUMBER:elb_status_code} %{NUMBER:target_status_code} %{INT:received_bytes} %{INT:sent_bytes} %{QUOTEDSTRING:request} %{QUOTEDSTRING:user_agent} %{NOTSPACE:ssl_cipher} %{NOTSPACE:ssl_protocol}" }
  }
  mutate {
    gsub => [
      "request", '"', "",
      "trace_id", '"', "",
      "user_agent", '"', ""
    ]
  }
  date {
      match  => [ "log_timestamp", "ISO8601"]
  }  
  grok {
        match => ["request", "(%{NOTSPACE:http_method})? (%{NOTSPACE:http_uri})? (%{NOTSPACE:http_version})?"]
    }
  grok {
        match => ["http_uri", "(%{WORD:protocol})?(://)?(%{IPORHOST:domain})?(:)?(%{INT:http_port})?(%{GREEDYDATA:request_uri})?"]
    }

  geoip {
        source => "client"
    } 
  mutate {
    remove_field => ["request", "path", "message", "@version", "tags", "beat", "input", "prospector", "offset"]
  }
}
output { 
  stdout {
    codec => rubydebug
  }
  mongodb {
    collection => "paytm_log"
    database => "paytm"
    uri => "mongodb://localhost:27017"
  }
}
